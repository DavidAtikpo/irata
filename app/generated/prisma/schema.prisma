// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  output          = "../app/generated/prisma"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["webirata"]
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String
  nom       String
  prenom    String
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  demandes  Demande[]
  devis     Devis[]
  contrats  Contrat[]

  @@schema("webirata")
}

model Formation {
  id          String    @id @default(cuid())
  titre       String
  description String
  duree       String
  prix        Float
  niveau      String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  demandes    Demande[]

  @@schema("webirata")
}

model Demande {
  id          String    @id @default(cuid())
  userId      String
  formationId String
  statut      Statut    @default(EN_ATTENTE)
  message     String?
  commentaire String? // Commentaire de l'administrateur
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
  formation   Formation @relation(fields: [formationId], references: [id])
  devis       Devis?

  @@schema("webirata")
}

model Devis {
  id               String    @id @default(cuid())
  demandeId        String    @unique
  userId           String
  numero           String
  client           String
  mail             String
  mail2            String    @default("atikpododzi4@gmail.com")
  adresseLivraison String?
  dateLivraison    DateTime?
  dateExamen       DateTime?
  adresse          String?
  siret            String?
  numNDA           String?
  dateFormation    DateTime?
  suiviPar         String?
  designation      String
  quantite         Int
  unite            String
  prixUnitaire     Float
  tva              Float
  exoneration      String?
  datePriseEffet   DateTime?
  montant          Float
  iban             String?
  bic              String?
  banque           String?
  intituleCompte   String?
  signature        String?
  statut           Statut    @default(EN_ATTENTE)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  demande          Demande   @relation(fields: [demandeId], references: [id])
  user             User      @relation(fields: [userId], references: [id])
  contrat          Contrat?

  @@schema("webirata")
}

model Contrat {
  id        String    @id @default(cuid())
  devisId   String    @unique
  userId    String
  statut    Statut    @default(EN_ATTENTE)
  dateDebut DateTime?
  dateFin   DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  devis     Devis     @relation(fields: [devisId], references: [id])
  user      User      @relation(fields: [userId], references: [id])

  @@schema("webirata")
}

model Settings {
  id        String   @id @default("1")
  company   Json
  formation Json
  email     Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@schema("webirata")
}

enum Role {
  USER
  ADMIN
  GESTIONNAIRE

  @@schema("webirata")
}

enum Statut {
  EN_ATTENTE
  VALIDE
  REFUSE
  ANNULE

  @@schema("webirata")
}
