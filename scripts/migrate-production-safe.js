const { execSync } = require('child_process');
const path = require('path');

console.log('üöÄ Migration s√©curis√©e pour la production...');
console.log('‚ö†Ô∏è  Ce script va pr√©server toutes les donn√©es existantes');

try {
  // 1. V√©rifier la connexion et r√©cup√©rer le sch√©ma actuel
  console.log('üîç √âtape 1: V√©rification de la connexion et r√©cup√©ration du sch√©ma...');
  execSync('npx prisma db pull', { 
    cwd: path.join(process.cwd()),
    stdio: 'inherit'
  });
  
  // 2. G√©n√©rer le client Prisma avec le sch√©ma actuel
  console.log('üîß √âtape 2: G√©n√©ration du client Prisma...');
  execSync('npx prisma generate', { 
    cwd: path.join(process.cwd()),
    stdio: 'inherit'
  });
  
  // 3. Cr√©er la migration (sans l'appliquer)
  console.log('üìù √âtape 3: Cr√©ation de la migration...');
  execSync('npx prisma migrate dev --name add-irata-disclaimer-production --create-only', { 
    cwd: path.join(process.cwd()),
    stdio: 'inherit'
  });
  
  // 4. V√©rifier le statut des migrations
  console.log('üîç √âtape 4: V√©rification du statut des migrations...');
  execSync('npx prisma migrate status', { 
    cwd: path.join(process.cwd()),
    stdio: 'inherit'
  });
  
  console.log('‚úÖ Migration cr√©√©e avec succ√®s !');
  console.log('');
  console.log('üìã PROCHAINES √âTAPES:');
  console.log('1. V√©rifiez le fichier de migration dans prisma/migrations/');
  console.log('2. Appliquez la migration: npx prisma migrate deploy');
  console.log('3. R√©g√©n√©rez le client: npx prisma generate');
  console.log('4. Migrez les donn√©es JSON: node scripts/migrate-data-only.js');
  console.log('');
  console.log('‚ö†Ô∏è  IMPORTANT: Sauvegardez votre base de donn√©es avant d\'appliquer la migration !');
  
} catch (error) {
  console.error('‚ùå Erreur lors de la migration:', error);
  console.log('üí° V√©rifiez votre variable d\'environnement DATABASE_URL');
  process.exit(1);
}
