const { execSync } = require('child_process');
const path = require('path');

console.log('üöÄ Pr√©paration de la migration pour la production...');
console.log('‚ö†Ô∏è  Ce script pr√©pare la migration sans se connecter √† la base de donn√©es');

try {
  // 1. G√©n√©rer le client Prisma avec le sch√©ma actuel
  console.log('üîß √âtape 1: G√©n√©ration du client Prisma...');
  execSync('npx prisma generate', { 
    cwd: path.join(process.cwd()),
    stdio: 'inherit'
  });
  
  // 2. Cr√©er la migration (sans l'appliquer)
  console.log('üìù √âtape 2: Cr√©ation de la migration...');
  execSync('npx prisma migrate dev --name add-irata-disclaimer-production --create-only', { 
    cwd: path.join(process.cwd()),
    stdio: 'inherit'
  });
  
  console.log('‚úÖ Migration pr√©par√©e avec succ√®s !');
  console.log('');
  console.log('üìã PROCHAINES √âTAPES (quand la DB sera accessible):');
  console.log('1. V√©rifiez le fichier de migration dans prisma/migrations/');
  console.log('2. Testez la connexion: npx prisma db pull');
  console.log('3. Appliquez la migration: npx prisma migrate deploy');
  console.log('4. R√©g√©n√©rez le client: npx prisma generate');
  console.log('5. Migrez les donn√©es JSON: node scripts/migrate-data-only.js');
  console.log('');
  console.log('üí° Pour tester la connexion √† la base de donn√©es:');
  console.log('   npx prisma db pull');
  
} catch (error) {
  console.error('‚ùå Erreur lors de la pr√©paration:', error);
  console.log('üí° V√©rifiez votre variable d\'environnement DATABASE_URL');
  process.exit(1);
}
