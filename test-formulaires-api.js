const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function testFormulairesAPI() {
  try {
    console.log('üîç Test de l\'API Formulaires Quotidiens...');
    
    // V√©rifier si les tables existent
    console.log('\nüìä V√©rification des tables...');
    
    // Compter les formulaires
    const formulairesCount = await prisma.formulairesQuotidiens.count();
    console.log(`‚úÖ Formulaires: ${formulairesCount}`);
    
    // Compter les r√©ponses
    const reponsesCount = await prisma.reponseFormulaire.count();
    console.log(`‚úÖ R√©ponses: ${reponsesCount}`);
    
    // V√©rifier la structure d'un formulaire
    if (formulairesCount > 0) {
      const formulaire = await prisma.formulairesQuotidiens.findFirst({
        include: {
          admin: {
            select: {
              nom: true,
              prenom: true,
              email: true
            }
          }
        }
      });
      
      console.log('\nüìã Exemple de formulaire:');
      console.log(`  - Titre: ${formulaire.titre}`);
      console.log(`  - Session: ${formulaire.session}`);
      console.log(`  - Questions: ${typeof formulaire.questions}`);
      console.log(`  - Admin: ${formulaire.admin.prenom} ${formulaire.admin.nom}`);
    }
    
    // V√©rifier la structure d'une r√©ponse
    if (reponsesCount > 0) {
      const reponse = await prisma.reponseFormulaire.findFirst({
        include: {
          stagiaire: {
            select: {
              nom: true,
              prenom: true,
              email: true
            }
          },
          formulaire: {
            select: {
              titre: true
            }
          }
        }
      });
      
      console.log('\nüìù Exemple de r√©ponse:');
      console.log(`  - Stagiaire: ${reponse.stagiaire.prenom} ${reponse.stagiaire.nom}`);
      console.log(`  - Formulaire: ${reponse.formulaire.titre}`);
      console.log(`  - R√©ponses: ${typeof reponse.reponses}`);
      console.log(`  - Date: ${reponse.dateReponse}`);
    }
    
  } catch (error) {
    console.error('üí• Erreur:', error);
  } finally {
    await prisma.$disconnect();
  }
}

testFormulairesAPI();
