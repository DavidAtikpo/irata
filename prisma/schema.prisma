generator client {
  provider        = "prisma-client-js"
  output          = "../app/generated/prisma"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["webirata"]
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String
  nom       String
  prenom    String
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  contrats  Contrat[]
  demandes  Demande[]
  devis     Devis[]
  documents Document[]

  @@schema("webirata")
}

model Formation {
  id          String   @id @default(cuid())
  titre       String
  description String
  duree       String
  prix        Float
  niveau      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@schema("webirata")
}

model Demande {
  id          String   @id @default(cuid())
  userId      String
  statut      Statut   @default(EN_ATTENTE)
  session     String
  message     String?
  commentaire String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  devis       Devis?

  @@schema("webirata")
}

model Devis {
  id               String    @id @default(cuid())
  demandeId        String    @unique
  userId           String
  numero           String
  client           String
  mail             String
  mail2            String    @default("atikpododzi4@gmail.com")
  adresseLivraison String?
  dateLivraison    DateTime?
  dateExamen       DateTime?
  adresse          String?
  siret            String?
  numNDA           String?
  dateFormation    DateTime?
  suiviPar         String?
  designation      String
  quantite         Int
  unite            String
  prixUnitaire     Float
  tva              Float
  exoneration      String?
  datePriseEffet   DateTime?
  montant          Float
  iban             String?
  bic              String?
  banque           String?
  intituleCompte   String?
  signature        String?
  statut           Statut    @default(EN_ATTENTE)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  contrat          Contrat?
  demande          Demande   @relation(fields: [demandeId], references: [id])
  user             User      @relation(fields: [userId], references: [id])
  documents        Document[]

  @@schema("webirata")
}

model Contrat {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  devisId       String   @unique
  userId        String
  nom           String
  prenom        String
  adresse       String
  profession    String?
  dateSignature DateTime
  signature     String
  statut        String   @default("EN_ATTENTE")
  devis         Devis    @relation(fields: [devisId], references: [id])
  user          User     @relation(fields: [userId], references: [id])

  @@index([devisId])
  @@index([userId])
  @@schema("webirata")
}

model Settings {
  id        String   @id @default("1")
  company   Json
  formation Json
  email     Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@schema("webirata")
}

model PasswordResetToken {
  email     String   @unique
  token     String
  expires   DateTime
  createdAt DateTime @default(now())

  @@schema("webirata")
}

model Document {
  id          String   @id @default(cuid())
  nom         String
  description String?
  cloudinaryId String  @unique
  url         String
  type        String   // 'formation', 'contrat', 'general', etc.
  public      Boolean  @default(false) // Si accessible à tous les utilisateurs
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations optionnelles
  userId      String?  // Si spécifique à un utilisateur
  user        User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  devisId     String?  // Si lié à un devis spécifique
  devis       Devis?   @relation(fields: [devisId], references: [id], onDelete: SetNull)

  @@schema("webirata")
}

enum Role {
  USER
  ADMIN
  GESTIONNAIRE

  @@schema("webirata")
}

enum Statut {
  EN_ATTENTE
  VALIDE
  REFUSE
  ANNULE

  @@schema("webirata")
}
