generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["webirata"]
}

model User {
  id                            String                         @id @default(cuid())
  email                         String                         @unique
  password                      String
  nom                           String?
  prenom                        String?
  role                          Role                           @default(USER)
  createdAt                     DateTime                       @default(now())
  updatedAt                     DateTime                       @updatedAt
  passwordResetToken            String?                        @unique
  passwordResetExpires          DateTime?
  niveau                        String?                        @default("1")
  address                       String?
  city                          String?
  country                       String?
  phone                         String?
  zipCode                       String?
  isActive                      Boolean                        @default(true)
  actionsCorrectivesResponsable ActionCorrective[]             @relation("ActionCorrectiveResponsable")
  actionCorrectiveCommentaires  ActionCorrectiveCommentaire[]  @relation("ActionCorrectiveCommentaireUser")
  attendanceSignatures          AttendanceSignature[]          @relation("AttendanceSignatures")
  adminAttendanceSessions       AdminAttendanceSession[]       @relation("AdminAttendanceSessions")
  contrats                      Contrat[]
  contributions                 Contribution[]
  corrections                   CorrectionFormulaire[]
  customerSatisfactionResponses CustomerSatisfactionResponse[]
  demandes                      Demande[]
  devis                         Devis[]
  documents                     Document[]
  documentActions               DocumentAction[]
  assessorInspections           EquipmentInspection[]          @relation("AssessorInspections")
  inspections                   EquipmentInspection[]
  equipmentDetailedInspections  EquipmentDetailedInspection[]  @relation("EquipmentDetailedInspectionCreatedBy")
  formBuilders                  FormBuilder[]                  @relation("FormBuilderCreatedBy")
  formTemplates                 FormTemplate[]                 @relation("FormTemplateCreatedBy")
  formSubmissions               FormSubmission[]               @relation("FormSubmissionSubmittedBy")
  formulairesCrees              FormulairesQuotidiens[]        @relation("AdminFormulaires")
  invoices                      Invoice[]
  IrataDisclaimerSubmission     IrataDisclaimerSubmission[]
  jobPlans                      JobPlan[]
  nonConformitesDetectees       NonConformite[]                @relation("NonConformiteDetecteur")
  nonConformitesResponsable     NonConformite[]                @relation("NonConformiteResponsable")
  nonConformiteCommentaires     NonConformiteCommentaire[]     @relation("NonConformiteCommentaireUser")
  notifications                 Notification[]
  preJobTrainingSignatures      PreJobTrainingSignature[]
  reponsesFormulaires           ReponseFormulaire[]            @relation("StagiaireReponses")
  traineeInductionSignatures    TraineeInductionSignature[]
  traineeProgress               TraineeProgress[]
  traineeSignatures             TraineeSignature?
  cart_items                    cart_items[]
  investments                   investments[]
  orders                        orders[]
  reviews                       reviews[]
  trainingSessions              TrainingSession[]              @relation("TrainingSessionTrainees")
  toolboxTalkRecordSignatures   ToolboxTalkRecordSignature[]
  diplomesStagiaire             Diplome[]                      @relation("DiplomasStagiaire")
  diplomesGeneres               Diplome[]                      @relation("DiplomasGeneratedBy")
  equipmentQRs                  EquipmentQR[]                  @relation("EquipmentQRCreatedBy")

  @@schema("webirata")
}

model Formation {
  id          String   @id @default(cuid())
  titre       String
  description String
  duree       String
  prix        Float
  niveau      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@schema("webirata")
}

model Demande {
  id              String   @id @default(cuid())
  userId          String
  statut          Statut   @default(EN_ATTENTE)
  session         String
  message         String?
  commentaire     String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  entreprise      String?
  typeInscription String?  @default("personnel")
  user            User     @relation(fields: [userId], references: [id])
  devis           Devis?

  @@schema("webirata")
}

model Devis {
  id               String     @id @default(cuid())
  demandeId        String     @unique
  userId           String
  numero           String
  client           String
  mail             String
  mail2            String     @default("atikpododzi4@gmail.com")
  entreprise       String?
  adresseLivraison String?
  dateLivraison    DateTime?
  dateExamen       DateTime?
  adresse          String?
  siret            String?
  numNDA           String?
  dateFormation    DateTime?
  suiviPar         String?
  designation      String
  quantite         Int
  unite            String
  prixUnitaire     Float
  tva              Float
  exoneration      String?
  datePriseEffet   DateTime?
  montant          Float
  iban             String?
  bic              String?
  banque           String?
  intituleCompte   String?
  signature        String?
  statut           Statut     @default(EN_ATTENTE)
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  referenceAffaire String?
  contrat          Contrat?
  demande          Demande    @relation(fields: [demandeId], references: [id])
  user             User       @relation(fields: [userId], references: [id])
  documents        Document[]

  @@schema("webirata")
}

model Contrat {
  id            String    @id @default(cuid())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  devisId       String    @unique
  userId        String
  nom           String
  prenom        String
  adresse       String
  ville         String?
  codePostal    String?
  pays          String?
  telephone     String?
  profession    String?
  dateSignature DateTime
  signature     String
  adminSignature String?
  statut        String    @default("EN_ATTENTE")
  numero        String?   @unique
  reference     String?
  // Champs sp√©cifiques aux conventions (entreprise)
  entrepriseNom         String?
  entrepriseAdresse     String?
  entrepriseVille       String?
  entrepriseCodePostal  String?
  entrepriseTelephone   String?
  devis         Devis     @relation(fields: [devisId], references: [id])
  user          User      @relation(fields: [userId], references: [id])
  invoices      Invoice[]

  @@index([devisId])
  @@index([userId])
  @@schema("webirata")
}

model Settings {
  id        String   @id @default("1")
  company   Json
  formation Json
  email     Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@schema("webirata")
}

model PasswordResetToken {
  email     String   @unique
  token     String
  expires   DateTime
  createdAt DateTime @default(now())

  @@schema("webirata")
}

model Document {
  id              String           @id @default(cuid())
  nom             String
  description     String?
  cloudinaryId    String           @unique
  url             String
  type            String
  public          Boolean          @default(false)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  userId          String?
  devisId         String?
  certificationId String?
  devis           Devis?           @relation(fields: [devisId], references: [id])
  user            User?            @relation(fields: [userId], references: [id])
  actions         DocumentAction[]
  historiqueItems HistoriqueItem[]

  @@schema("webirata")
}

model DocumentAction {
  id         String             @id @default(cuid())
  documentId String
  userId     String
  action     DocumentActionType
  timestamp  DateTime           @default(now())
  ipAddress  String?
  userAgent  String?
  document   Document           @relation(fields: [documentId], references: [id], onDelete: Cascade)
  user       User               @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([documentId, userId, action])
  @@schema("webirata")
}

model FormulairesQuotidiens {
  id           String              @id @default(cuid())
  titre        String
  description  String?
  session      String
  dateCreation DateTime            @default(now())
  dateDebut    DateTime
  dateFin      DateTime
  actif        Boolean             @default(true)
  valide       Boolean             @default(false)
  questions    Json
  createdBy    String
  createdAt    DateTime            @default(now())
  updatedAt    DateTime            @updatedAt
  niveau       String              @default("1")
  admin        User                @relation("AdminFormulaires", fields: [createdBy], references: [id])
  reponses     ReponseFormulaire[]

  @@schema("webirata")
}

model ReponseFormulaire {
  id                 String                @id @default(cuid())
  formulaireId       String
  stagiaireId        String
  dateReponse        DateTime              @default(now())
  reponses           Json
  commentaires       String?
  soumis             Boolean               @default(false)
  createdAt          DateTime              @default(now())
  updatedAt          DateTime              @updatedAt
  commentaireAdmin   String?
  decisionAdmin      DecisionAdmin?
  maxScore           Int?
  score              Int?
  scoreAdmin         Int?
  reponseOriginaleId String?
  version            Int                   @default(1)
  correction         CorrectionFormulaire?
  formulaire         FormulairesQuotidiens @relation(fields: [formulaireId], references: [id], onDelete: Cascade)
  reponseOriginale   ReponseFormulaire?    @relation("ReponseCorrections", fields: [reponseOriginaleId], references: [id])
  corrections        ReponseFormulaire[]   @relation("ReponseCorrections")
  stagiaire          User                  @relation("StagiaireReponses", fields: [stagiaireId], references: [id], onDelete: Cascade)

  @@unique([formulaireId, stagiaireId, dateReponse])
  @@schema("webirata")
}

model EquipmentInspection {
  id                           String           @id @default(cuid())
  docNumber                    String           @default("HS019ENG")
  dateOfIssue                  DateTime         @default(now())
  issueNumber                  String           @default("001")
  inspectionDate               DateTime
  technicianName               String
  technicianIrataNo            String
  makeOfItem                   String
  modelOfItem                  String
  itemIdNumber                 String
  standardsConformance         String?
  suitabilityOfItem            String?
  ageOfItem                    String?
  historyOfItem                String?
  metalPartsCondition          String?
  textilePartsCondition        String?
  plasticPartsCondition        String?
  movingPartsFunction          String?
  operationalCheck             String?
  compatibilityCheck           String?
  overallComments              String?
  technicianVerdict            Verdict?
  assessorVerdict              Verdict?
  assessorComments             String?
  candidateCorrectlyIdentified Boolean?
  status                       InspectionStatus @default(DRAFT)
  createdAt                    DateTime         @default(now())
  updatedAt                    DateTime         @updatedAt
  technicianId                 String
  assessorId                   String?
  assessor                     User?            @relation("AssessorInspections", fields: [assessorId], references: [id])
  technician                   User             @relation(fields: [technicianId], references: [id])

  @@schema("webirata")
}

model EquipmentDetailedInspection {
  id                           String           @id @default(cuid())
  
  // Identification √©quipement
  referenceInterne             String
  typeEquipement               String
  fabricant                    String?
  numeroSerie                  String?
  dateFabrication              String?
  dateAchat                    String?
  dateMiseEnService            String?
  dateInspectionDetaillee      String?
  numeroKit                    String?
  taille                       String?
  longueur                     String?
  normesCertificat             String?
  documentsReference           String?
  consommation                 String?
  attribution                  String?
  commentaire                  String?
  photo                        String?
  qrCode                       String?
  pdfUrl                       String?
  dateAchatImage               String?
  etat                         String           @default("OK")
  
  // Vie de l'√©quipement - Points d'inspection
  antecedentProduit            Json?            // Structure pour les points d'ant√©c√©dent
  observationsPrelables        Json?            // Structure pour les observations
  calotteExterieurInterieur    Json?            // Structure pour la calotte
  calotin                      Json?            // Structure pour le calotin
  coiffe                       Json?            // Structure pour la coiffe
  tourDeTete                   Json?            // Structure pour le tour de t√™te
  systemeReglage               Json?            // Structure pour le syst√®me de r√©glage
  jugulaire                    Json?            // Structure pour la jugulaire
  mousseConfort                Json?            // Structure pour la mousse de confort
  crochetsLampe                Json?            // Structure pour les crochets de lampe
  accessoires                  Json?            // Structure pour les accessoires
  
  // Signature
  verificateurSignature        String?
  verificateurSignaturePdf     String?
  verificateurNom              String?
  dateSignature                DateTime?
  
  // M√©tadonn√©es
  status                       InspectionStatus @default(DRAFT)
  createdAt                    DateTime         @default(now())
  updatedAt                    DateTime         @updatedAt
  createdById                  String
  createdBy                    User             @relation("EquipmentDetailedInspectionCreatedBy", fields: [createdById], references: [id])

  @@schema("webirata")
}

// Syst√®me de formulaires dynamiques (FormBuilder)
model FormBuilder {
  id                    String           @id @default(cuid())
  name                  String
  description           String?
  title                 String
  isActive              Boolean          @default(true)
  formData              Json             // Structure compl√®te du formulaire avec blocs
  settings              Json?            // Param√®tres du formulaire
  createdAt             DateTime         @default(now())
  updatedAt             DateTime         @updatedAt
  createdById           String
  createdBy             User             @relation("FormBuilderCreatedBy", fields: [createdById], references: [id])
  
  // Relations
  formSubmissions       FormSubmission[]
  formTemplates         FormTemplate[]

  @@schema("webirata")
}

model FormTemplate {
  id                    String           @id @default(cuid())
  name                  String
  description           String?
  templateData          Json             // Structure du template
  category              String?          // Type d'√©quipement, inspection, etc.
  isPublic              Boolean          @default(false)
  createdAt             DateTime         @default(now())
  updatedAt             DateTime         @updatedAt
  createdById           String
  formBuilderId         String?
  formBuilder           FormBuilder?     @relation(fields: [formBuilderId], references: [id])
  createdBy             User             @relation("FormTemplateCreatedBy", fields: [createdById], references: [id])

  @@schema("webirata")
}

model FormSubmission {
  id                    String           @id @default(cuid())
  formData              Json             // Donn√©es soumises
  status                FormSubmissionStatus @default(DRAFT)
  submittedAt           DateTime?
  createdAt             DateTime         @default(now())
  updatedAt             DateTime         @updatedAt
  formBuilderId         String
  formBuilder           FormBuilder      @relation(fields: [formBuilderId], references: [id])
  submittedById         String
  submittedBy           User             @relation("FormSubmissionSubmittedBy", fields: [submittedById], references: [id])

  @@schema("webirata")
}

enum FormSubmissionStatus {
  DRAFT
  SUBMITTED
  REVIEWED
  APPROVED
  REJECTED

  @@schema("webirata")
}

model JobPlan {
  id                   String           @id @default(cuid())
  docNumber            String           @default("HS061ENG")
  dateOfIssue          DateTime         @default(now())
  issueNumber          String           @default("001")
  technicianName       String
  technicianIrataNo    String
  jobDate              DateTime
  jobLength            String?
  clientDetails        String?
  taskDetails          String
  location             String
  height               String?
  accessMethod         String?
  communicationMethods String?
  permitRequirements   String?
  anchorStructure      String
  anchorEquipment      String
  accessPlan           String
  evacuationPlan       String
  rescuePlan           String
  status               InspectionStatus @default(DRAFT)
  createdAt            DateTime         @default(now())
  updatedAt            DateTime         @updatedAt
  technicianId         String
  technician           User             @relation(fields: [technicianId], references: [id])

  @@schema("webirata")
}

model TraineeFollowUp {
  id           String             @id @default(cuid())
  title        String             @default("CI.DES TRAINEE FOLLOW UP FORM")
  codeNumber   String             @default("ENR-CIFRA-FORM 004")
  revision     String             @default("01")
  creationDate DateTime           @default(now())
  status       String             @default("ACTIVE")
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
  levelData    TraineeLevelData[]
  progress     TraineeProgress[]
  signatures   TraineeSignature[]

  @@schema("webirata")
}

model TraineeProgress {
  id           String           @id @default(cuid())
  syllabusItem String
  traineeId    String
  day          String
  completed    Boolean          @default(false)
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  followUpId   String?
  followUp     TraineeFollowUp? @relation(fields: [followUpId], references: [id])
  trainee      User             @relation(fields: [traineeId], references: [id], onDelete: Cascade)

  @@unique([syllabusItem, traineeId, day])
  @@schema("webirata")
}

model TraineeLevelData {
  id           String           @id @default(cuid())
  syllabusItem String
  level        String
  required     Boolean          @default(false)
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  followUpId   String?
  followUp     TraineeFollowUp? @relation(fields: [followUpId], references: [id])

  @@unique([syllabusItem, level])
  @@schema("webirata")
}

model TraineeSignature {
  id             String           @id @default(cuid())
  traineeId      String           @unique
  signature      String
  adminSignature String?
  isValidated    Boolean          @default(false)
  validatedAt    DateTime?
  currentDay     Int              @default(1)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  followUpId     String?
  sessionId      String?
  followUp       TraineeFollowUp? @relation(fields: [followUpId], references: [id])
  session        TrainingSession? @relation(fields: [sessionId], references: [id])
  trainee        User             @relation(fields: [traineeId], references: [id], onDelete: Cascade)

  @@schema("webirata")
}

model TrainingSession {
  id         String             @id @default(cuid())
  name       String
  startDate  DateTime
  endDate    DateTime
  status     String             @default("ACTIVE")
  createdAt  DateTime           @default(now())
  updatedAt  DateTime           @updatedAt
  signatures TraineeSignature[]
  trainees   User[]             @relation("TrainingSessionTrainees")

  @@schema("webirata")
}

model Contribution {
  id                    String             @id @default(cuid())
  donorName             String
  donorEmail            String
  donorPhone            String?
  amount                Int
  type                  ContributionType
  returnAmount          Int
  returnDescription     String?
  paymentMethod         PaymentMethod      @default(MOBILE_MONEY)
  status                ContributionStatus @default(PENDING)
  notes                 String?
  createdAt             DateTime           @default(now())
  updatedAt             DateTime           @updatedAt
  userId                String?
  stripePaymentIntentId String?            @unique
  user                  User?              @relation(fields: [userId], references: [id])

  @@schema("webirata")
}

model CustomerSatisfactionResponse {
  id          String                   @id @default(cuid())
  userId      String?
  traineeName String?
  type        CustomerSatisfactionType
  date        DateTime                 @default(now())
  items       Json
  suggestions String?
  session     String?
  signature   String?
  createdAt   DateTime                 @default(now())
  updatedAt   DateTime                 @updatedAt
  user        User?                    @relation(fields: [userId], references: [id])

  @@schema("webirata")
}

model IrataDisclaimerSubmission {
  id             String                @id
  name           String?
  address        String
  signature      String
  session        String?
  irataNo        String?
  userId         String?
  adminSignature String?
  adminSignedAt  DateTime?
  adminName      String?
  status         IrataDisclaimerStatus @default(PENDING)
  createdAt      DateTime              @default(now())
  updatedAt      DateTime
  User           User?                 @relation(fields: [userId], references: [id])

  @@schema("webirata")
}

model PreJobTrainingSignature {
  id            String   @id @default(cuid())
  day           String
  signatureData String
  userId        String
  userName      String?
  signedAt      DateTime @default(now())
  autoSigned    Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@schema("webirata")
}

model Invoice {
  id            String         @id @default(cuid())
  invoiceNumber String         @unique
  amount        Float
  paymentStatus PaymentStatus  @default(PENDING)
  paidAmount    Float?
  paymentMethod PaymentMethod?
  notes         String?
  userId        String
  contratId     String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  contrat       Contrat        @relation(fields: [contratId], references: [id], onDelete: Cascade)
  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@schema("webirata")
}

model TraineeInduction {
  id             String                      @id @default(cuid())
  sessionId      String
  courseDate     String
  courseLocation String
  diffusion      String
  copie          String
  adminSignature String
  createdAt      DateTime                    @default(now())
  updatedAt      DateTime                    @updatedAt
  publishedAt    DateTime?
  status         String                      @default("draft")
  signatures     TraineeInductionSignature[]

  @@schema("webirata")
}

model TraineeInductionSignature {
  id            String           @id @default(cuid())
  inductionId   String
  userId        String
  userSignature String
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  induction     TraineeInduction @relation(fields: [inductionId], references: [id], onDelete: Cascade)
  user          User             @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([inductionId, userId])
  @@schema("webirata")
}

model Notification {
  id        String   @id @default(cuid())
  userId    String
  title     String
  message   String
  type      String
  read      Boolean  @default(false)
  relatedId String?
  createdAt DateTime @default(now())
  category  String?
  metadata  String?
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@schema("webirata")
}

model NonConformite {
  id                          String                     @id @default(cuid())
  numero                      String                     @unique
  titre                       String
  description                 String
  type                        NonConformiteType
  gravite                     NonConformiteGravite
  statut                      NonConformiteStatut        @default(OUVERTE)
  dateDetection               DateTime                   @default(now())
  dateEcheance                DateTime?
  lieu                        String?
  detecteurId                 String
  responsableId               String?
  sessionId                   String?
  formulaireId                String?
  inspectionId                String?
  createdAt                   DateTime                   @default(now())
  updatedAt                   DateTime                   @updatedAt
  actionPlanned               String?
  analysisCauses              String?
  anomalyDescription          String?
  anomalyOrigin               String?
  anomalyOriginOther          String?
  categoryOfAnomaly           String?
  closingDate                 DateTime?
  closingDepartment           String?
  collaboratorAppointed       String?
  collaboratorInCharge        String?
  conclusionType              String?
  correctiveActionDescription String?
  effectivenessAction         String?
  immediateCurativeAction     String?
  issuerName                  String?
  issuerSignature             String?
  limitTime                   String?
  preventiveActionDescription String?
  qualityManagerDate          DateTime?
  qualityManagerObservation   String?
  qualityManagerSignature     String?
  recipientDate               DateTime?
  recipientDepartment         String?
  recipientName               String?
  recipientNumber             String?
  recipientSignature          String?
  signatureRecipient          String?
  actionsCorrectives          ActionCorrective[]
  detecteur                   User                       @relation("NonConformiteDetecteur", fields: [detecteurId], references: [id])
  responsable                 User?                      @relation("NonConformiteResponsable", fields: [responsableId], references: [id])
  commentaires                NonConformiteCommentaire[]
  documents                   NonConformiteDocument[]

  @@schema("webirata")
}

model ActionCorrective {
  id                      String                        @id @default(cuid())
  nonConformiteId         String?
  titre                   String
  description             String
  type                    ActionCorrectiveType
  statut                  ActionCorrectiveStatut        @default(EN_COURS)
  priorite                ActionCorrectivePriorite      @default(MOYENNE)
  dateDebut               DateTime                      @default(now())
  dateEcheance            DateTime?
  dateRealisation         DateTime?
  responsableId           String?
  resultats               String?
  efficacite              ActionCorrectiveEfficacite?
  createdAt               DateTime                      @default(now())
  updatedAt               DateTime                      @updatedAt
  actionPlanned           String?
  analysis                String?
  categoryOfAnomaly       String?
  closingDate             String?
  collaboratorAppointed   String?
  collaboratorInCharge    String?
  conclusion              String?
  conclusionSignature     String?
  correctiveDescribed     Boolean?                      @default(false)
  date                    String?
  department              String?
  effectiveness           String?
  immediateCurativeAction Boolean?                      @default(false)
  issuerDescription       String?
  issuerName              String?
  limitTime               String?
  number                  String?
  observation             String?
  originAdministration    Boolean?                      @default(false)
  originCustomer          Boolean?                      @default(false)
  originOther             Boolean?                      @default(false)
  originProduction        Boolean?                      @default(false)
  preventiveDescribed     Boolean?                      @default(false)
  recipientName           String?
  recipientSignature      String?
  signatureReception      String?
  effectivenessType       String?
  issuerSignature         String?
  nonConformite           NonConformite?                @relation(fields: [nonConformiteId], references: [id], onDelete: Cascade)
  responsable             User?                         @relation("ActionCorrectiveResponsable", fields: [responsableId], references: [id])
  commentaires            ActionCorrectiveCommentaire[]
  documents               ActionCorrectiveDocument[]

  @@schema("webirata")
}

model NonConformiteDocument {
  id              String        @id @default(cuid())
  nonConformiteId String
  nom             String
  description     String?
  url             String
  type            String
  createdAt       DateTime      @default(now())
  nonConformite   NonConformite @relation(fields: [nonConformiteId], references: [id], onDelete: Cascade)

  @@schema("webirata")
}

model ActionCorrectiveDocument {
  id                 String           @id @default(cuid())
  actionCorrectiveId String
  nom                String
  description        String?
  url                String
  type               String
  createdAt          DateTime         @default(now())
  actionCorrective   ActionCorrective @relation(fields: [actionCorrectiveId], references: [id], onDelete: Cascade)

  @@schema("webirata")
}

model NonConformiteCommentaire {
  id              String        @id @default(cuid())
  nonConformiteId String
  userId          String
  commentaire     String
  createdAt       DateTime      @default(now())
  nonConformite   NonConformite @relation(fields: [nonConformiteId], references: [id], onDelete: Cascade)
  user            User          @relation("NonConformiteCommentaireUser", fields: [userId], references: [id])

  @@schema("webirata")
}

model ActionCorrectiveCommentaire {
  id                 String           @id @default(cuid())
  actionCorrectiveId String
  userId             String
  commentaire        String
  createdAt          DateTime         @default(now())
  actionCorrective   ActionCorrective @relation(fields: [actionCorrectiveId], references: [id], onDelete: Cascade)
  user               User             @relation("ActionCorrectiveCommentaireUser", fields: [userId], references: [id])

  @@schema("webirata")
}

model AttendanceSignature {
  id            String   @id @default(cuid())
  userId        String
  signatureKey  String
  signatureData String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation("AttendanceSignatures", fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, signatureKey])
  @@schema("webirata")
}

model AttendanceUnlock {
  id          String   @id @default(cuid())
  sessionName String
  day         String
  period      String
  createdBy   String
  createdAt   DateTime @default(now())

  @@unique([sessionName, day, period])
  @@schema("webirata")
}

model AdminAttendanceSession {
  id           String   @id @default(cuid())
  userId       String
  signatureKey String
  sessionName  String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation("AdminAttendanceSessions", fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, signatureKey])
  @@schema("webirata")
}

model Equipment {
  id               String   @id @default(cuid())
  qrCode           String   @unique
  produit          String?
  referenceInterne String?
  numeroSerie      String?
  typeEquipement   String?
  normesCertificat String?
  fabricant        String?
  dateControle     String?
  signataire       String?
  pdfUrl           String?
  rawText          String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@schema("webirata")
}

model CorrectionFormulaire {
  id             String            @id @default(cuid())
  reponseId      String            @unique
  decision       String
  commentaire    String?
  score          Float?
  dateCorrection DateTime          @default(now())
  adminId        String
  admin          User              @relation(fields: [adminId], references: [id])
  reponse        ReponseFormulaire @relation(fields: [reponseId], references: [id], onDelete: Cascade)

  @@schema("webirata")
}

model TeamMember {
  id             String   @id @default(cuid())
  name           String
  role           String
  experience     String
  certifications String?
  photo          String?
  email          String?
  linkedin       String?
  isActive       Boolean  @default(true)
  order          Int      @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@schema("webirata")
}

model EdgeAndRopeManagementValidation {
  id             String   @id @default(cuid())
  adminName      String
  adminSignature String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@schema("webirata")
}

model ToolboxTalkRecord {
  id                    String                      @id @default(cuid())
  site                  String
  session               String?
  date                  DateTime
  topic                 String                      @default("Toolbox Talk: Edge Management")
  reason                String
  startTime             String
  finishTime            String
  mattersRaised         Json                        // Array of {matter: string, action: string}
  comments              String?
  adminName             String
  adminSignature        String
  isPublished           Boolean                     @default(false)
  publishedAt           DateTime?
  createdAt             DateTime                    @default(now())
  updatedAt             DateTime                    @updatedAt
  signatures            ToolboxTalkRecordSignature[]

  @@schema("webirata")
}

model ToolboxTalkRecordSignature {
  id                    String            @id @default(cuid())
  recordId              String
  userId                String
  userName              String
  signature             String
  signedAt              DateTime          @default(now())
  record                ToolboxTalkRecord @relation(fields: [recordId], references: [id], onDelete: Cascade)
  user                  User              @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@schema("webirata")
}

model HistoriqueItem {
  id          String   @id @default(cuid())
  annee       String
  session     String
  commentaire String?
  documentId  String
  createdAt   DateTime @default(now())
  document    Document @relation(fields: [documentId], references: [id], onDelete: Cascade)

  @@schema("webirata")
}

model cart_items {
  id        String   @id
  userId    String
  productId String
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime
  products  products @relation(fields: [productId], references: [id], onDelete: Cascade)
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, productId])
  @@schema("webirata")
}

model categories {
  id          String     @id
  name        String
  description String?
  image       String?
  slug        String     @unique
  createdAt   DateTime   @default(now())
  updatedAt   DateTime
  products    products[]

  @@schema("webirata")
}

model investments {
  id        String           @id
  userId    String
  projectId String
  amount    Float
  reward    Json?
  status    InvestmentStatus @default(PENDING)
  createdAt DateTime         @default(now())
  updatedAt DateTime
  projects  projects         @relation(fields: [projectId], references: [id])
  User      User             @relation(fields: [userId], references: [id])

  @@schema("webirata")
}

model order_items {
  id         String   @id
  orderId    String
  productId  String
  quantity   Int
  unitPrice  Float
  totalPrice Float
  createdAt  DateTime @default(now())
  orders     orders   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  products   products @relation(fields: [productId], references: [id])

  @@schema("webirata")
}

model orders {
  id              String        @id
  orderNumber     String        @unique
  userId          String
  status          OrderStatus   @default(PENDING)
  totalAmount     Float
  shippingCost    Float         @default(0)
  taxAmount       Float         @default(0)
  paymentMethod   String?
  paymentStatus   PaymentStatus @default(PENDING)
  shippingAddress Json
  billingAddress  Json?
  trackingNumber  String?
  notes           String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime
  order_items     order_items[]
  User            User          @relation(fields: [userId], references: [id])

  @@schema("webirata")
}

model products {
  id                    String        @id
  name                  String
  description           String
  price                 Float
  stock                 Int           @default(0)
  images                String[]
  sku                   String        @unique
  weight                Float?
  dimensions            String?
  brand                 String?
  status                ProductStatus @default(ACTIVE)
  categoryId            String
  createdAt             DateTime      @default(now())
  updatedAt             DateTime
  tags                  String[]
  views                 Int           @default(0)
  ceMarking             Boolean       @default(false)
  conformityCertificate String?
  controlCertificate    String?
  serialNumber          String?
  standards             String?
  technicalNotice       String?
  cart_items            cart_items[]
  order_items           order_items[]
  categories            categories    @relation(fields: [categoryId], references: [id])
  reviews               reviews[]

  @@schema("webirata")
}

model projects {
  id               String        @id
  title            String
  description      String
  shortDescription String?
  images           String[]
  targetAmount     Float
  currentAmount    Float         @default(0)
  startDate        DateTime
  endDate          DateTime
  status           ProjectStatus @default(DRAFT)
  category         String
  location         String?
  rewards          Json[]
  updates          Json[]
  createdAt        DateTime      @default(now())
  updatedAt        DateTime
  investments      investments[]

  @@schema("webirata")
}

model reviews {
  id        String   @id
  userId    String
  productId String
  rating    Int
  comment   String?
  createdAt DateTime @default(now())
  updatedAt DateTime
  products  products @relation(fields: [productId], references: [id])
  User      User     @relation(fields: [userId], references: [id])

  @@unique([userId, productId])
  @@schema("webirata")
}

enum DocumentActionType {
  RECEIVED
  OPENED
  DOWNLOADED

  @@schema("webirata")
}

enum Role {
  USER
  ADMIN
  GESTIONNAIRE
  CONTRIBUTOR
  CLIENT

  @@schema("webirata")
}

enum Statut {
  EN_ATTENTE
  VALIDE
  REFUSE
  ANNULE

  @@schema("webirata")
}

enum InspectionStatus {
  DRAFT
  SUBMITTED
  ASSESSED
  APPROVED
  REJECTED

  @@schema("webirata")
}

enum Verdict {
  PASS
  FAIL
  DISCREPANCY

  @@schema("webirata")
}

enum DecisionAdmin {
  ACCEPTE
  REFUSE
  A_REVOIR

  @@schema("webirata")
}

enum ContributionType {
  PREFORMATION
  FINANCIAL
  MATERIAL

  @@schema("webirata")
}

enum ContributionStatus {
  PENDING
  CONFIRMED
  PROCESSED
  CANCELLED

  @@schema("webirata")
}

enum PaymentMethod {
  MOBILE_MONEY
  BANK_TRANSFER
  CASH
  CRYPTO
  VIREMENT

  @@schema("webirata")
}

enum PaymentStatus {
  PENDING
  PAID
  PARTIAL
  CANCELLED

  @@schema("webirata")
}

enum CustomerSatisfactionType {
  ENVIRONMENT_RECEPTION
  EQUIPMENT
  TRAINING_PEDAGOGY

  @@schema("webirata")
}

enum IrataDisclaimerStatus {
  PENDING
  SIGNED
  SENT

  @@schema("webirata")
}

enum NonConformiteType {
  SECURITE
  QUALITE
  PROCEDURE
  EQUIPEMENT
  FORMATION
  DOCUMENTATION
  ENVIRONNEMENT
  AUTRE

  @@schema("webirata")
}

enum NonConformiteGravite {
  MINEURE
  MAJEURE
  CRITIQUE

  @@schema("webirata")
}

enum NonConformiteStatut {
  OUVERTE
  EN_COURS
  FERMEE
  ANNULEE

  @@schema("webirata")
}

enum ActionCorrectiveType {
  CORRECTION_IMMEDIATE
  ACTION_CORRECTIVE
  ACTION_PREVENTIVE
  AMELIORATION_CONTINUE

  @@schema("webirata")
}

enum ActionCorrectiveStatut {
  EN_COURS
  TERMINEE
  EN_ATTENTE
  ANNULEE

  @@schema("webirata")
}

enum ActionCorrectivePriorite {
  BASSE
  MOYENNE
  HAUTE
  CRITIQUE

  @@schema("webirata")
}

enum ActionCorrectiveEfficacite {
  TRES_EFFICACE
  EFFICACE
  PARTIELLEMENT_EFFICACE
  INEFFICACE

  @@schema("webirata")
}

enum InvestmentStatus {
  PENDING
  CONFIRMED
  COMPLETED
  REFUNDED

  @@schema("webirata")
}

enum OrderStatus {
  PENDING
  CONFIRMED
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
  RETURNED

  @@schema("webirata")
}

enum ProductStatus {
  ACTIVE
  INACTIVE
  OUT_OF_STOCK

  @@schema("webirata")
}

enum ProjectStatus {
  DRAFT
  ACTIVE
  FUNDED
  COMPLETED
  CANCELLED

  @@schema("webirata")
}

// Mod√®le pour les dipl√¥mes IRATA
model Diplome {
  id              String   @id @default(cuid())
  qrCode          String   @unique // Code unique pour le QR
  stagiaireId     String
  stagiaire       User     @relation("DiplomasStagiaire", fields: [stagiaireId], references: [id])
  
  // Informations du dipl√¥me
  nom             String
  prenom          String
  formation       String   // Ex: "IRATA Niveau 1", "IRATA Niveau 2"
  session         String   // Ex: "10. 2025 / octobre: du 06 au 10"
  dateObtention   DateTime
  photoUrl        String?  // URL de la photo du stagiaire
  pdfUrl          String?  // URL du PDF du dipl√¥me g√©n√©r√©
  
  // M√©tadonn√©es
  genereParId     String
  generePar       User     @relation("DiplomasGeneratedBy", fields: [genereParId], references: [id])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@schema("webirata")
}

// Mod√®le pour les √©quipements avec QR code
model EquipmentQR {
  id                  String   @id @default(cuid())
  qrCode              String   @unique // Code unique pour le QR
  
  // Donn√©es extraites du PDF
  produit             String?
  referenceInterne    String?
  numeroSerie         String?
  normes              String?
  fabricant           String?
  dateControle        String?
  signataire          String?
  
  // Fichier PDF original
  pdfUrl              String   // URL Cloudinary du PDF
  cloudinaryPublicId  String   // ID Cloudinary pour r√©cup√©ration
  
  // M√©tadonn√©es
  createdById         String
  createdBy           User     @relation("EquipmentQRCreatedBy", fields: [createdById], references: [id])
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  
  @@schema("webirata")
}
