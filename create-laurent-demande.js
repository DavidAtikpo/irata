const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function createLaurentDemande() {
  try {
    console.log('üîç Recherche de Laurent Cides...');
    
    // Trouver Laurent Cides par email
    const laurent = await prisma.user.findUnique({
      where: { email: 'pmcides@gmail.com' },
      select: { id: true, nom: true, prenom: true, email: true }
    });

    if (!laurent) {
      console.log('‚ùå Laurent Cides non trouv√©');
      return;
    }

    console.log('‚úÖ Laurent Cides trouv√©:', laurent);

    // Cr√©er une demande pour Laurent avec la session souhait√©e
    console.log('üìù Cr√©ation d\'une demande pour Laurent Cides...');
    
    const nouvelleDemande = await prisma.demande.create({
      data: {
        userId: laurent.id,
        session: '2025 octobre du 20 au 24 (Examen 25)',
        message: 'Demande cr√©√©e automatiquement pour assigner Laurent Cides √† la session',
        statut: 'EN_ATTENTE', // Statut par d√©faut
        typeInscription: 'personnel',
        entreprise: null
      }
    });

    console.log('‚úÖ Demande cr√©√©e avec succ√®s!');
    console.log('üìã D√©tails de la demande:');
    console.log(`  - ID: ${nouvelleDemande.id}`);
    console.log(`  - Session: ${nouvelleDemande.session}`);
    console.log(`  - Statut: ${nouvelleDemande.statut}`);
    console.log(`  - Cr√©√©: ${nouvelleDemande.createdAt.toISOString()}`);

  } catch (error) {
    console.error('‚ùå Erreur lors de la cr√©ation de la demande:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// Ex√©cuter le script
createLaurentDemande();
